/*!
 * UI development toolkit for HTML5 (OpenUI5)
 * (c) Copyright 2009-2018 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["jquery.sap.global","sap/ui/thirdparty/URI","./Opa","./Opa5"],function(e,t,n,s){"use strict";QUnit.begin(function(e){n._usageReport.begin({uri:(new t).toString(),totalTests:e.totalTests})});QUnit.moduleStart(function(e){n._usageReport.moduleUpdate(e)});QUnit.testDone(function(e){n._usageReport.testDone(e);var t=e.assertions.some(function(e){return!e.result&&e.message==="Test timed out"});if(t){n._stopQueue({qunitTimeout:QUnit.config.testTimeout/1e3})}});QUnit.moduleDone(function(e){n._usageReport.moduleUpdate(e)});QUnit.done(function(e){n._usageReport.done(e)});var i=function(e,t,i,o){var a=n.config;if(!QUnit.config.testTimeout||QUnit.config.testTimeout===3e4){QUnit.config.testTimeout=9e4}QUnit.config.reorder=false;QUnit.config.scrolltop=false;if(arguments.length===2){i=t;t=null}if(QUnit.test.length===2&&o===true){throw new Error("Qunit >=2.0 is used, which no longer supports the 'async' parameter for tests.")}var r=function(o){var r=o.async();a.testName=e;n.assert=o;s.assert=o;if(QUnit.test.length===2&&t!==null){o.expect(t)}i.call(this,a.arrangements,a.actions,a.assertions);n.emptyQueue().done(function(){n._usageReport.opaEmpty();n.assert=undefined;s.assert=undefined;r()}).fail(function(e){n._usageReport.opaEmpty(e);o.ok(false,e.errorMessage);n.assert=undefined;s.assert=undefined;if(!e.qunitTimeout){setTimeout(r,0)}})};if(QUnit.test.length===2){return QUnit.test(e,r)}else{return QUnit.test(e,t,r,o)}};window.opaTest=i;QUnit.config.urlConfig.push({id:"opaExecutionDelay",value:{400:"fast",700:"medium",1000:"slow"},label:"Opa speed",tooltip:"Each waitFor will be delayed by a number of milliseconds. If it is not set Opa will execute the tests as fast as possible"});s._getEventProvider().attachEvent("onExtensionAfterInit",function(t){var s=t.getParameters();if(s.extension.getAssertions){var i=s.extension.getAssertions();e.each(i,function(e,t){QUnit.assert[e]=function(){var e=this;var i=t.bind(s.appWindow)(arguments).always(function(t){e.push(t.result,t.actual,t.expected,t.message)});n.config.assertions._schedulePromiseOnFlow(i)}})}});return i});